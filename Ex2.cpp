#include <iostream>
#include <unordered_map> // Подключаем библиотеку для использования хэш-таблицы

using namespace std;

int romanToInt(string s) { // Объявляем функцию для преобразования римского числа в натуральное
    unordered_map<char, int> romanMap = { // Создаём хэш-таблицу для соответствия римских цифр и их значений
        {'I', 1},
        {'V', 5},
        {'X', 10},
        {'L', 50},
        {'C', 100},
        {'D', 500},
        {'M', 1000}
    };
    
    int result = 0; // Инициализируем переменную для хранения результата
    int prev = 0; // Инициализируем переменную для хранения значения предыдущей цифры
    
    for (int i = s.size() - 1; i >= 0; i--) { // Проходимся по строке римского числа справа налево
        int current = romanMap[s[i]]; // Получаем значение текущей римской цифры
        if (current < prev) { // Если значение текущей цифры меньше предыдущей
            result -= current; // Вычитаем его из результата
        } else {
            result += current; // Прибавляем его к результату
        }
        prev = current; // Обновляем значение предыдущей цифры для следующей итерации
    }
    
    return result; // Возвращаем полученный результат
}

int main() { // Основная функция программы
    string input; // Объявляем переменную для ввода римского числа
    cout << "Input Roman numeral: "; // Выводим приглашение на ввод
    cin >> input;
    
    int output = romanToInt(input); // Преобразуем римское число в натуральное
    cout << "Output: " << output << endl; // Выводим результат
    
    return 0;
}
